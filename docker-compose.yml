version: '3'

services:
  postgres:
    image: postgres:latest
    env_file:
      - .env
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB} 
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      
  python-back:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: Diarias
    volumes:
      - ./:/app
    networks:
      - my_network
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    env_file:
      - .env
  prometheus:
    image: prom/prometheus:v2.38.0
    container_name: prometheus
    ports:
      - "9092:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    restart: always
    networks:
      - my_network
  alertmanager:
    image: prom/alertmanager:v0.23.0
    container_name: alertmanager
    ports:
      - "9095:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    networks:
      - my_network

  node-exporter:
    image: prom/node-exporter:v1.3.1
    container_name: node-exporter
    ports:
      - "9101:9100"
    networks:
      - my_network

  portainer_agent:
    container_name: portainer_agent
    image: portainer/agent:latest
    restart: always
    ports:
      - "9001:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    deploy:
      resources:
        limits:
          memory: 250MB
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
volumes:
  postgres-data:
    driver: local
